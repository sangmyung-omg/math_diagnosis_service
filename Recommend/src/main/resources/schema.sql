DROP TABLE IF EXISTS PROBLEM_SET_DEMO;
DROP TABLE IF EXISTS PROBLEM_DEMO;
DROP TABLE IF EXISTS USER_EMBEDDING;
DROP TABLE IF EXISTS USER_KNOWLEDGE;
DROP TABLE IF EXISTS CARD_PROBLEM_MAPPING;
DROP TABLE IF EXISTS USER_EXAM_CURRICULUM_LOG;
DROP TABLE IF EXISTS UK_REL;
DROP TABLE IF EXISTS UK_MASTER;
DROP TABLE IF EXISTS TYPE_UK_REL;
DROP TABLE IF EXISTS TYPE_UK_MASTER;
DROP TABLE IF EXISTS CURRICULUM_MASTER;
DROP TABLE IF EXISTS USER_MASTER;


CREATE TABLE USER_MASTER
(
    `USER_UUID`              VARCHAR(32)     NOT NULL    COMMENT 'USER_UUID', 
    `GRADE`                  VARCHAR(20)     NULL        COMMENT '학년', 
    `SEMESTER`               VARCHAR(20)     NULL        COMMENT '학기', 
    `NAME`                   VARCHAR(100)    NULL        COMMENT '이름', 
    `CURRENT_CURRICULUM_ID`  VARCHAR(32)     NULL        COMMENT '현재 학교 진도 단원 ID', 
    `EXAM_TYPE`              VARCHAR(32)     NULL        COMMENT '시험 종류', 
    `EXAM_START_DATE`        TIMESTAMP       NULL        COMMENT '시험 준비 시작 날짜', 
    `EXAM_DUE_DATE`          TIMESTAMP       NULL        COMMENT '시험 날짜', 
    `EXAM_TARGET_SCORE`      INT             NULL        COMMENT '시험 목표 점수', 
    CONSTRAINT  PRIMARY KEY (USER_UUID)
);



CREATE TABLE CURRICULUM_MASTER
(
    `CURRICULUM_ID`        varchar(32)    NOT NULL    COMMENT 'CURRICULUM_ID', 
    `SCHOOL_TYPE`          varchar(20)    NULL        COMMENT '학교', 
    `GRADE`                varchar(20)    NULL        COMMENT '학년', 
    `SEMESTER`             varchar(20)    NULL        COMMENT '학기', 
    `CHAPTER`              varchar(100)    NULL        COMMENT '대단원', 
    `SECTION`              varchar(100)    NULL        COMMENT '중단원', 
    `SUB_SECTION`          varchar(100)    NULL        COMMENT '소단원', 
    `CHAPTER_ID`           varchar(32)    NULL        COMMENT '대단원 CHAPTER_ID', 
    `CURRICULUM_SEQUENCE`  int    NULL        COMMENT '단원 순서', 
    CONSTRAINT  PRIMARY KEY (CURRICULUM_ID)
);



CREATE TABLE UK_MASTER
(
    `UK_UUID`         varchar(32)    NOT NULL    COMMENT 'UK_UUID', 
    `UK_NAME`         varchar(200)    NOT NULL    COMMENT 'UK 이름', 
    `UK_TYPE`         varchar(10)    NULL        COMMENT 'UK 종류 ("KT" OR "TYPE")', 
    `UK_DESCRIPTION`  varchar(1000)    NULL        COMMENT 'UK 설명 텍스트', 
    `TRAIN_UNSEEN`    CHAR(1)         NOT NULL    COMMENT '분석 모델 학습 사용 여부 (0 OR 1 )', 
    `CURRICULUM_ID`   varchar(32)    NULL        COMMENT 'CURRICULUM_ID', 
    CONSTRAINT  PRIMARY KEY (UK_UUID)
);

ALTER TABLE UK_MASTER
    ADD CONSTRAINT FK_UK_MASTER_CURRICULUM_ID_CUR FOREIGN KEY (CURRICULUM_ID)
        REFERENCES CURRICULUM_MASTER (CURRICULUM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;



CREATE TABLE UK_REL
(
    `BASE_UK_UUID`        varchar(32)    NOT NULL    COMMENT 'BASE_UK_UUID', 
    `PRE_UK_UUID`         varchar(32)    NOT NULL    COMMENT 'PRE_UK_UUID', 
    `RELATION_REFERENCE`  varchar(20)    NULL        COMMENT '관계 출처'
);

ALTER TABLE UK_REL
    ADD CONSTRAINT FK_UK_REL_BASE_UK_UUID_UK_MAST FOREIGN KEY (BASE_UK_UUID)
        REFERENCES UK_MASTER (UK_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE UK_REL
    ADD CONSTRAINT FK_UK_REL_PRE_UK_UUID_UK_MASTE FOREIGN KEY (PRE_UK_UUID)
        REFERENCES UK_MASTER (UK_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;


        
CREATE TABLE TYPE_UK_MASTER
(
    `TYPE_UK_UUID`         VARCHAR(32)      NOT NULL    COMMENT 'TYPE_UK_UUID', 
    `TYPE_UK_NAME`         VARCHAR(200)     NOT NULL    COMMENT 'TYPE_UK 이름', 
    `TYPE_UK_DESCRIPTION`  VARCHAR(1000)    NULL        COMMENT 'TYPE_UK 설명 텍스트', 
    `CURRICULUM_ID`        VARCHAR(32)      NULL        COMMENT 'CURRICULUM_ID',  
    CONSTRAINT  PRIMARY KEY (TYPE_UK_UUID)
);

ALTER TABLE TYPE_UK_MASTER
    ADD CONSTRAINT FK_TYPE_UK_MASTER_CURRICULUM_ID_CURRICULUM_MASTER_CURRICULUM_ID FOREIGN KEY (CURRICULUM_ID)
        REFERENCES CURRICULUM_MASTER (CURRICULUM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
  
        
CREATE TABLE TYPE_UK_REL
(
    `BASE_TYPE_UK_UUID`   VARCHAR(32)    NOT NULL    COMMENT 'BASE_TYPE_UK_UUID', 
    `PRE_TYPE_UK_UUID`    VARCHAR(32)    NOT NULL    COMMENT 'PRE_TYPE_UK_UUID', 
    `RELATION_REFERENCE`  VARCHAR(20)    NULL        COMMENT '관계 출처'
);

ALTER TABLE TYPE_UK_REL
    ADD CONSTRAINT FK_TYPE_UK_REL_BASE_TYPE_UK_UUID_TYPE_UK_MASTER_TYPE_UK_UUID FOREIGN KEY (BASE_TYPE_UK_UUID)
        REFERENCES TYPE_UK_MASTER (TYPE_UK_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE TYPE_UK_REL
    ADD CONSTRAINT FK_TYPE_UK_REL_PRE_TYPE_UK_UUID_TYPE_UK_MASTER_TYPE_UK_UUID FOREIGN KEY (PRE_TYPE_UK_UUID)
        REFERENCES TYPE_UK_MASTER (TYPE_UK_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;
        

CREATE TABLE USER_EMBEDDING
(
    `USER_UUID`       VARCHAR(32)    NOT NULL    COMMENT 'USER_UUID', 
    `USER_EMBEDDING`  MEDIUMTEXT     NULL        COMMENT 'USER 임베딩 벡터', 
    `UPDATE_DATE`     TIMESTAMP      NULL        COMMENT '임베딩 UPDATE TIME', 
    CONSTRAINT  PRIMARY KEY (USER_UUID)
);

ALTER TABLE USER_EMBEDDING
    ADD CONSTRAINT FK_USER_EMBEDDING_USER_UUID_US FOREIGN KEY (USER_UUID)
        REFERENCES USER_MASTER (USER_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;



CREATE TABLE USER_KNOWLEDGE
(
    `USER_UUID`    VARCHAR(32)    NOT NULL    COMMENT 'USER_UUID', 
    `UK_UUID`      VARCHAR(32)    NOT NULL    COMMENT 'UK ID', 
    `UK_MASTERY`   FLOAT          NULL        COMMENT 'UK 숙련도', 
    `UPDATE_DATE`  TIMESTAMP      NULL        COMMENT '숙련도 업데이트 일자', 
    CONSTRAINT  PRIMARY KEY (USER_UUID, UK_UUID)
);

ALTER TABLE USER_KNOWLEDGE
    ADD CONSTRAINT FK_USER_KNOWLEDGE_UK_UUID_UK_MASTER_UK_UUID FOREIGN KEY (UK_UUID)
        REFERENCES UK_MASTER (UK_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE USER_KNOWLEDGE
    ADD CONSTRAINT FK_USER_KNOWLEDGE_USER_UUID_US FOREIGN KEY (USER_UUID)
        REFERENCES USER_MASTER (USER_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;
        
        
CREATE TABLE USER_EXAM_CURRICULUM_LOG
(
    `CARD_ID`           VARCHAR(32)    NOT NULL    COMMENT 'CARD_ID', 
    `CARD_TYPE`         VARCHAR(32)    NOT NULL    COMMENT '추천된 카드 종류', 
    `CARD_TITLE`        VARCHAR(200)    NULL        COMMENT '카드 제목', 
    `USER_UUID`         VARCHAR(32)    NOT NULL    COMMENT 'USER_UUID', 
    `RECOMMENDED_DATE`  TIMESTAMP      NOT NULL    COMMENT '추천된 날짜', 
    `SECTION_ID`        VARCHAR(32)    NULL        COMMENT '카드에 해당하는 중단원 아이디', 
    `TYPE_UK_UUID`      VARCHAR(32)    NULL        COMMENT '유형 UK UUID (유형 카드 이외는 NULL)', 
    `CARD_SEQUENCE`     INT            NOT NULL    COMMENT '전체 학습 시퀀스 기준 카드 순서', 
    CONSTRAINT  PRIMARY KEY (CARD_ID)
);

ALTER TABLE USER_EXAM_CURRICULUM_LOG
    ADD CONSTRAINT FK_USER_EXAM_CURRICULUM_LOG_US FOREIGN KEY (USER_UUID)
        REFERENCES USER_MASTER (USER_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE USER_EXAM_CURRICULUM_LOG
    ADD CONSTRAINT FK_USER_EXAM_CURRICULUM_LOG_TYPE_UK_UUID_TYPE_UK_MASTER_TYPE_UK_ FOREIGN KEY (TYPE_UK_UUID)
        REFERENCES TYPE_UK_MASTER (TYPE_UK_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;
        
        
CREATE TABLE PROBLEM_DEMO
(
    `PROB_UUID`       VARCHAR(32)    NOT NULL    COMMENT 'PROB_UUID', 
    `UK_UUID`         VARCHAR(32)    NULL        COMMENT 'UK_ID', 
    `CHAPTER`         VARCHAR(32)    NULL        COMMENT '단원 ID', 
    `DIFFICULTY`      VARCHAR(32)    NULL        COMMENT '난이도', 
    `PROB_TYPE_UUID`  VARCHAR(32)    NULL        COMMENT 'PROB_TYPE_ID', 
    CONSTRAINT  PRIMARY KEY (PROB_UUID)
);

ALTER TABLE PROBLEM_DEMO
    ADD CONSTRAINT FK_PROBLEM_DEMO_UK_UUID_UK_MASTER_UK_UUID FOREIGN KEY (UK_UUID)
        REFERENCES UK_MASTER (UK_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE PROBLEM_DEMO
    ADD CONSTRAINT FK_PROBLEM_DEMO_CHAPTER_CURRICULUM_MASTER_CURRICULUM_ID FOREIGN KEY (CHAPTER)
        REFERENCES CURRICULUM_MASTER (CURRICULUM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE PROBLEM_DEMO
    ADD CONSTRAINT FK_PROBLEM_DEMO_PROB_TYPE_UUID_TYPE_UK_MASTER_TYPE_UK_UUID FOREIGN KEY (PROB_TYPE_UUID)
        REFERENCES TYPE_UK_MASTER (TYPE_UK_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;

        
CREATE TABLE PROBLEM_SET_DEMO
(
    `PROB_SET_UUID`  VARCHAR(32)    NOT NULL    COMMENT 'PROB_SET_UUID', 
    `PROB1_UUID`     VARCHAR(32)    NULL        COMMENT 'PROB1_UUID', 
    `PROB2_UUID`     VARCHAR(32)    NULL        COMMENT 'PROB2_UUID', 
    `PROB3_UUID`     VARCHAR(32)    NULL        COMMENT 'PROB3_UUID', 
    `CHAPTER`        VARCHAR(32)    NULL        COMMENT '단원 ID', 
    `PART`           VARCHAR(20)    NULL        COMMENT '학습영역', 
    CONSTRAINT  PRIMARY KEY (PROB_SET_UUID)
);

ALTER TABLE PROBLEM_SET_DEMO
    ADD CONSTRAINT FK_PROBLEM_SET_DEMO_CHAPTER_CURRICULUM_MASTER_CURRICULUM_ID FOREIGN KEY (CHAPTER)
        REFERENCES CURRICULUM_MASTER (CURRICULUM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE PROBLEM_SET_DEMO
    ADD CONSTRAINT FK_PROBLEM_SET_DEMO_PROB1_UUID_PROBLEM_DEMO_PROB_UUID FOREIGN KEY (PROB1_UUID)
        REFERENCES PROBLEM_DEMO (PROB_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE PROBLEM_SET_DEMO
    ADD CONSTRAINT FK_PROBLEM_SET_DEMO_PROB2_UUID_PROBLEM_DEMO_PROB_UUID FOREIGN KEY (PROB2_UUID)
        REFERENCES PROBLEM_DEMO (PROB_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE PROBLEM_SET_DEMO
    ADD CONSTRAINT FK_PROBLEM_SET_DEMO_PROB3_UUID_PROBLEM_DEMO_PROB_UUID FOREIGN KEY (PROB3_UUID)
        REFERENCES PROBLEM_DEMO (PROB_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;
        
        
CREATE TABLE CARD_PROBLEM_MAPPING
(
    `MAPPING_ID`     VARCHAR(32)    NOT NULL    COMMENT 'MAPPING_ID', 
    `CARD_ID`        VARCHAR(32)    NOT NULL    COMMENT 'CARD_ID', 
    `DIFFICULTY`     VARCHAR(32)    NOT NULL    COMMENT '문제 난이도', 
    `UK_UUID`        VARCHAR(32)    NOT NULL    COMMENT 'UK_UUID (데모용. 추후에는 PROB_UUID)', 
    `IS_CORRECT`     VARCHAR(32)    NULL        COMMENT '문제 맞/틀 여부 (true, false, pass)', 
    `PROB_SEQUENCE`  INT            NOT NULL    COMMENT '카드 내 문제 시퀀스', 
    CONSTRAINT  PRIMARY KEY (MAPPING_ID)
);

ALTER TABLE CARD_PROBLEM_MAPPING
    ADD CONSTRAINT FK_CARD_PROBLEM_MAPPING_CARD_ID_USER_EXAM_CURRICULUM_LOG_CARD_ID FOREIGN KEY (CARD_ID)
        REFERENCES USER_EXAM_CURRICULUM_LOG (CARD_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE CARD_PROBLEM_MAPPING
    ADD CONSTRAINT FK_CARD_PROBLEM_MAPPING_UK_UUID_UK_MASTER_UK_UUID FOREIGN KEY (UK_UUID)
        REFERENCES UK_MASTER (UK_UUID) ON DELETE RESTRICT ON UPDATE RESTRICT;
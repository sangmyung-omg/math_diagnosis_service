openapi: '3.0.2'
info:
  title: WAPL Math SAP API
  version: '0.1.0'
  description: |
    지식 수준, 진단고사, 시험 대비 추천 관련 API
servers:
  - url: http://192.168.153.214:8080/
    description: "example server address"
tags:
- name : 'Diagnosis'
  description: "진단고사 API"
- name : 'Mastery'
  description: "학생 지식 수준 업데이트 API"
- name : 'Schedule'
  description: "학습 스케줄 카드 추천 API"
- name : 'User'
  description: "문제 추천을 위한 사용자 정보 입력 API"
- name : 'Additional Learning'
  description: "추가학습(완벽학습) 카드 추천 API"
paths:
  /DiagnosisProblems:
    get:
      tags: [Diagnosis]
      operationId: DiagnosisProblemsGet
      summary: 진단고사 문제 전체 요청
      parameters:
        - name: token
          in: header
          description: 유저의 Access token (유저 ID에 대응되는 개념)
          required: true
          schema:
            type: string
            default: mkkang2
        - name: diagType
          in: path
          description: 진단 종류 (간단="simple" or 꼼꼼="in-depth")
          required: true
          schema:
            default: in-depth
            type: string
      responses:
        200:
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisProblemsResult'
        500:
          description: 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultMessage:
                    type: string
                    example: "Error: status code 500"                
  /AdaptiveProblem:
    get:
      tags: [Diagnosis]
      operationId: AdaptiveProblemGet
      summary: Adaptive한 다음 문제 요청
      parameters:
        - name: token
          in: header
          description: 유저 access token
          required: true
          schema:
            default: mkkang2
            type: string
        - name: diagType
          in: path
          description: 진단 종류 (간단="simple" or 꼼꼼="in-depth")
          required: true
          schema:
            default: in-depth
            type: string
        - name: probId
          in: path
          description: 방금 맞은 난이도 '상' 문제 ID
          required: true
          schema:
            default: 1633
            type: integer
      responses:
        200:
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdaptiveProblemResult'
        500:
          description: 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultMessage:
                    type: string
                    example: "Error: status code 500"
  /mastery:
    put:
      tags:
        - "Mastery"
      summary: "학생 문제 풀이 결과 기반 지식 수준 업데이트"
      description: |
        Triton Server를 활용하여 학생 지식 수준을 업데이트 함
      parameters:
        - $ref: "#/components/parameters/UserToken"
      requestBody:
        $ref: "#/components/requestBodies/ProblemSolveRecord"
      responses:
        "200":
          description: "성공 시"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasteryUpdateResult"
        "500":
          description: "오류 발생 시"
          $ref: "#/components/responses/500-Generic" 
  /examschedulecard:
    get:
      tags:
        - "Schedule"
      summary: "오늘의 시험 대비 학습 스케줄 카드 구성 리턴"
      description: |
        사용자의 시험 대비 학습 스케줄 오늘 카드 구성 리턴
      parameters:
        - $ref: "#/components/parameters/UserToken"
      responses:
        "200":
          description: "성공 시"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExamScheduleCard"
        "500":
          description: "오류 발생 시"
          $ref: "#/components/responses/500-Generic"
  /normalschedulecard:
    get:
      tags:
        - "Schedule"
      summary: "오늘의 실력 향상 학습 스케줄 카드 구성 리턴"
      description: |
        사용자의 실력 향상 학습 스케줄 오늘 카드 구성 리턴
      parameters:
        - $ref: "#/components/parameters/UserToken"
      responses:
        "200":
          description: "성공 시"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NormalScheduleCard"
        "500":
          description: "오류 발생 시"
          $ref: "#/components/responses/500-Generic"
  /userexaminfo:
    put:
      tags:
        - 'User'
      summary: "학생 시험 정보 입력"
      description: 
        학생이 시험 대비 진입 시 입력한 시험 정보 동기화
      parameters:
        - $ref: "#/components/parameters/UserToken"
      requestBody:
        $ref: "#/components/requestBodies/UserExamInfo"
      responses:
        "200":
          description: "성공 시"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserExamInfoResult"
        "500":
          description: "오류 발생 시"
          $ref: "#/components/responses/500-Generic" 
  /userbasicinfo:
    put:
      tags:
        - User
      summary: 학생 기본 정보 입력
      description: 학년, 학기, 이름, 현재 배우고 있는 단원 정보 동기화
      parameters:
        - $ref: "#/components/parameters/UserToken"
      requestBody:
        $ref:  "#/components/requestBodies/UserBasicInfo"
      responses:
        "200":
          description: "성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserBasicInfoResult"
        "500":
          description: "실패"
          $ref: "#/components/responses/500-Generic"

  /frequent:
    put:
      tags:
        - Additional Learning
      summary: "빈출카드 추천"
      description: "완벽학습에서 빈출 카드 제공"
      parameters:
        - $ref: "#/components/parameters/UserToken"
      requestBody:
        $ref:  "#/components/requestBodies/SubsectionInfo"
      responses:
        "200":
          description: "성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FrequentCardResult"
        "500":
          description: "실패"
          $ref: "#/components/responses/500-Generic"

components:
  schemas:
    DiagnosisProblemsResult:
      properties:
        resultMessage:
          type: string
          example: "Successfully Returned"
        diagnosisProblems:
          type: array
          description: 순서 = '하', '중', '상'
          example:
            - [2552,1371,1633]
            - [1234,5678,9101]
            - [1121,3141,5161]
            - [7181,9202,1222]
            - [3242,5262,7282]
    AdaptiveProblemResult:
      properties:
        resultMessage:
          type: string
          example: "Successfully Returned"
        adaptiveProblem:
          type: integer
          example: 9101
    ExamScheduleCard:
      type: "object"
      description: "오늘의 시험 대비 학습 스케줄 카드 구성 정보"
      required:
        - "message"
        - "remainTypeCard"
        - "cardList"
      properties:
        message:
          type: "string"
          example: "Successfully returned today exam card."
          description: "결과 메시지"
        remainTypeCard:
          type: number
          example: 30
          description: "진도에서 남은 유형 카드 개수"
        cardList:
          type: "array"
          description: "오늘 카드 목록"
          items:
            $ref: "#/components/schemas/CardObject"
    NormalScheduleCard:
      type: "object"
      description: "오늘의 실력 향상 학습 스케줄 카드 구성 정보"
      required:
        - "message"
        - "cardList"
      properties:
        message:
          type: "string"
          example: "Successfully returned today exam card."
          description: "결과 메시지"
        cardList:
          type: "array"
          description: "오늘 카드 목록"
          items:
            $ref: "#/components/schemas/CardObject"
    CardObject:
      type: "object"
      description: "카드 정보. 유형/보충은 4-6문제, 중간평가/모의고사는 20문제"
      required:
        - "cardType"
        - "cardTitle"
        - "firstProbLevel"
        - "estimatedTime"
        - "cardScore"
        - "cardDetail"
        - "probIdSetList"
      properties:
        cardType:
          type: "string"
          example: "type"
          enum:
            - "type"
            - "supple"
            - "midExam"
            - "trialExam"
          description: "카드 종류"
        cardTitle:
          type: "string"
          example: "유한소수와 무한소수"
          description: "카드 이름. UI 가이드 참고"
        firstProbLevel:
          type: "string"
          example: "high"
          description: "학생의 이해도 기반, 첫 번째 문제의 난이도"
          enum:
            - "high"
            - "middle"
            - "low"
        estimatedTime:
          type: number
          example: 900
          description: "카드 푸는데 걸리는 예상 소요 시간 (sec)"
        cardScore:
          type: "number"
          example: 71.88207
          description: "해당 카드의 점수 (보충 카드는 null)"
        cardDetail:
          type: "string"
          example: "{\"subSection\":\"순환소수\",\"section\":\"유리수와 순환소수\",\"chapter\":\"수와 식\"}"
          description: "카드 상세 정보를 담은 json string. \n1) 유형카드 : 유형이 속한 단원 이름. 'subSection'-'소단원 이름', 'section'-'중단원 이름', 'chapter'-'대단원 이름' \n2) 보충카드 : 보충 카드에 속한 '유형 이름'-'점수' \n3) 중간평가카드 : 중단원 내 소단원 (or 대단원 내 중단원) '이름'-'점수'"
        probIdSetList:
          type: "array"
          description: "상/중/하 난이도를 포함한 문제 ID 세트 목록"
          items:
            $ref: "#/components/schemas/ProbIdSet"
          example:
            - high: 10
              middle: 11
              low: 12
            - high: 20
              middle: 21
              low: 22
    ProbIdSet:
      type: "object"
      required:
        - "high"
        - "middle"
        - "low"
      properties:
        high:
          type: number
          example: 11
          description: "상 난이도 문제 Id"
        middle:
          type: number
          example: 12
          description: "중 난이도 문제 Id"
        low:
          type: number
          example: 13
          description: "하 난이도 문제 Id"
    ProbIdList:
      type: array
      description: "문제 ID 목록"
      items:
        type: "string"
      example:
        - "607"
        - "608"
        - "4673"
    CorrectList:
      type: array
      description: "문제 정답 여부 목록"
      items:
        type: "string"
        enum:
          - "true"
          - "false"
          - "pass"
      example: 
          - "true"
          - "false"
          - "pass"
    UserExamInfo:
      type: "object"
      description: "사용자 시험 정보"
      required:
        - "examType"
        - "examStartDate"
        - "examDueDate"
        - "targetScore"
      properties:
        examType:
          type: "string"
          example: "mid"
          description: "시험 종류. mid/final"
          enum:
            - "mid"
            - "final"
        examStartDate:
          type: "string"
          example: "2021-06-01"
          description: "시험 준비 시작 날짜. yyyy-mm-dd 형식"
        examDueDate:
          type: "string"
          example: "2021-06-14"
          description: "시험 날짜. yyyy-mm-dd 형식"
        targetScore:
          type: number
          example: 85
          description: "목표 시험 점수"
    
    UserBasicInfo:
      type: object
      description: 학생 기본 정보
      required:
        - grade
        - semester
        - name
        - currentCurriculumId
      properties:
        grade:
          type: string
          example: "2"
          description: 학년
          enum:
            - "1"
            - "2"
            - "3"
        semester:
          type: string
          example: "1"
          description: 학기
          enum:
            - "1"
            - "2"
        name:
          type: string
          example: "박평우"
          description: 학생 이름
        currentCurriculumId:
          type: string
          example: "중등-중2-1학-01"
          description: 현재 학교에서 배우고 있는 단원. Null 이면 현재 학년-학기-03 대단원으로 초기화.


    MasteryUpdateResult:
      type: "object"
      required:
        - "message"
      properties:
        message:
          type: "string"
          example: "Successfully update user mastery."
          description: "성공 여부 메시지"
    UserExamInfoResult:
      type: "object"
      required:
        - "message"
      properties:
        message:
          type: "string"
          example: "Successfully update user exam info."
          description: "성공 여부 메시지"
    UserBasicInfoResult:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: Successfully update user basic info.
          description: "성공 여부 메시지"
          
    
    
    
    SubsectionInfo:
      type: object
      required:
          - "is_firstFrequent"
          - "todaySubsectionList"
      properties:
        is_firstFrequent:
          type: boolean
          example: true
          description: "진단고사 직후 첫 접속인지 아닌지 (첫접속 = 1)"
        todaySubsectionList:
          type: array
          description: "진단고사 or 오늘의 학습 카드 내 소단원 리스트"
          items:
            type: string
          example:
            - "소인수분해"
            - "정수와 유리수"
          
    FrequentCardResult:
      properties:
        resultMessage:
          type: string
          example: "Successfully Returned"
        cardType :
          type: string
          example: "빈출카드"
        probSetList:
          type: array
          description: "카드를 구성하는 빈출문제 리스트"
          items: 
            $ref: "#/components/schemas/FreqProblems"
          example:
            - probId: 1
            - probId: 2
            - probId: 3
        sectionSetList:
          type: array
          description: "추천된 빈출문제가 속해있는 중단원들과 이해도"
          items: 
            $ref: "#/components/schemas/FreqSectionMastery"    
          example:
            - section: "소인수분해"
              sectionMastery: 0.6
            - section: "정수와 유리수"
              sectionMastery: 0.5
          
    FreqProblems:
      type: object
      required:
          - "probId"
      properties:
        probId:
          type: number
          example: 1
          description: "카드를 구성하는 빈출문제 ID"
    FreqSectionMastery:
      type: object
      required:
          - "section"
          - "sectionMastery"
      properties:
        section:
          type: string
          example: "소인수분해"
          description: "중단원 이름"
        sectionMastery:
          type: number
          example: 0.6
          description: "중단원 이해도"
 

 
  responses:
    500-Generic:
      description: "500 에러에 대한 generic response"
      content:
        application/json:
          schema:
            type: object
            properties:
              errorCode:
                type: string
                description: "Error code"
                example: "ERR-1001"
              message:
                type: string
                description: "Error message"
                example : "Invalid token ID"
  parameters:
    UserToken:
      in: "header"
      name: "token"
      required: true
      description: "유저의 Access token"
      schema:
        type: "string"
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySUQiOiJta2thbmcifQ.ZjD-h4zkD2t8GsqA9or7F8NAbKVGTGEnBEeNvpI8Z5o"
  requestBodies:
    ProblemSolveRecord:
      description: "학생 문제 풀이 기록"
      required: true
      content:
        application/json:
          schema:
            properties:
              probIdList:
                $ref: "#/components/schemas/ProbIdList"
              correctList:
                $ref: "#/components/schemas/CorrectList"
    UserExamInfo:
      description: "학생 시험 정보"
      required: true
      content:
        application/json:
          schema:
              $ref: "#/components/schemas/UserExamInfo"
    UserBasicInfo:
      description: "학생 기본 정보"
      required: true
      content:
        application/json:
          schema:
            $ref:  "#/components/schemas/UserBasicInfo"
            
    SubsectionInfo:
      description: "오늘 학습 소단원 정보"
      required: true
      content:
        application/json:
          schema:
            $ref:  "#/components/schemas/SubsectionInfo"